package hr.fer.zemris.java.custom.scripting.elems;

import java.util.Stack;

/**
 * the element to visitent visitor interface, used for establishing a visitor design pattern
 * on individual smartscript document elements. Classes that implement this
 * interface should provide mechanism for visiting all the element to visitents
 * encounterable in a smartscript document.
 *
 * @author Juraj Juričić
 */
public interface IElementVisitor {

	/**
	 * The method called upon encountering a double constant element.
	 *
	 * @param elem
	 *            the element to visit
	 */
	public void visitElementConstantDouble(ElementConstantDouble elem);

	/**
	 * The method called upon encountering an integer constant element.
	 *
	 * @param elem
	 *            the element to visit
	 */
	public void visitElementConstantInteger(ElementConstantInteger elem);

	/**
	 * The method called upon encountering a string element.
	 *
	 * @param elem
	 *            the element to visit
	 */
	public void visitElementString(ElementString elem);

	/**
	 * The method called upon encountering a function element.
	 *
	 * @param elem
	 *            the element to visit
	 */
	public void visitElementFunction(ElementFunction elem);

	/**
	 * The method called upon encountering an operator element.
	 *
	 * @param elem
	 *            the element to visit
	 */
	public void visitElementOperator(ElementOperator elem);

	/**
	 * The method called upon encountering a variable element.
	 *
	 * @param elem
	 *            the element to visit
	 */
	public void visitElementVariable(ElementVariable elem);

	/**
	 * Gets the stack generated by the visitor after the visit.
	 *
	 * @return the stack
	 */
	public Stack<Object> getStack();
}
